(function(){const d=document.createElement("link").relList;if(d&&d.supports&&d.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))l(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const g of s.addedNodes)g.tagName==="LINK"&&g.rel==="modulepreload"&&l(g)}).observe(document,{childList:!0,subtree:!0});function m(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function l(o){if(o.ep)return;o.ep=!0;const s=m(o);fetch(o.href,s)}})();window.onload=()=>{let A=!1,d=null,m=null;const l={latitude:51.935502,longitude:7.652093},o=[3,6,9,12,15],s=document.querySelector("a-scene"),g=document.querySelector("[gps-new-camera]"),O=document.getElementById("compassArrow"),v=document.getElementById("compassText"),q=document.getElementById("distanceDisplay"),p=document.createElement("button");p.innerText="Kalibrieren",p.classList.add("calib-button"),document.body.appendChild(p),p.addEventListener("click",()=>{m?(d=[...m],b("Kalibrierung gesetzt!")):b("Keine Sensordaten für Kalibrierung verfügbar!")});let h;if("AbsoluteOrientationSensor"in window)h=new AbsoluteOrientationSensor({frequency:60});else if("RelativeOrientationSensor"in window)h=new RelativeOrientationSensor({frequency:60});else{b("Gerät unterstützt keine Orientation Sensoren.");return}h.addEventListener("reading",()=>{m=[...h.quaternion],C(h.quaternion)}),h.addEventListener("error",e=>{console.error("Sensor error: ",e.error),b("Fehler beim Sensor!")}),h.start(),g.addEventListener("gps-camera-update-position",e=>{const r=e.detail.position.latitude,a=e.detail.position.longitude,i=B(r,a,l.latitude,l.longitude);q.innerText=`Entfernung zum Ziel: ${Math.round(i)} m`;let u=0;if(d&&(u=y(m)-y(d)),document.querySelectorAll("a-circle").forEach(t=>t.remove()),o.forEach(t=>{const n=document.createElement("a-circle");n.setAttribute("radius","0.5"),n.setAttribute("color","#00008B"),n.setAttribute("opacity","0.7");const c=T(r,a,l.latitude,l.longitude,t,u);n.setAttribute("gps-new-entity-place",{latitude:c.latitude,longitude:c.longitude}),s.appendChild(n)}),!A){const t=document.createElement("a-image");t.setAttribute("src","./images/map-marker.png"),t.setAttribute("width","4"),t.setAttribute("height","4"),t.setAttribute("look-at","[gps-new-camera]"),t.setAttribute("gps-new-entity-place",{latitude:l.latitude,longitude:l.longitude}),s.appendChild(t),A=!0}});function C(e){if(!e)return;const r=y(e);O.style.transform=`rotate(${-r}deg)`,v.innerText=`${Math.round(r)}°`}function y(e){let[r,a,i,u]=e,n=Math.atan2(2*(u*i+r*a),1-2*(a*a+i*i))*180/Math.PI;return n<0&&(n+=360),d?(n-y(d)+360)%360:n}function T(e,r,a,i,u,t){const n=x(e,r,a,i,u),c=111320,f=40075e3*Math.cos(e*Math.PI/180)/360,M=(n.latitude-e)*c,w=(n.longitude-r)*f,L=w*Math.cos(t)-M*Math.sin(t),E=w*Math.sin(t)+M*Math.cos(t);return{latitude:e+E/c,longitude:r+L/f}}function x(e,r,a,i,u){const t=e*Math.PI/180,n=r*Math.PI/180,c=a*Math.PI/180,M=i*Math.PI/180-n,w=Math.sin(M)*Math.cos(c),L=Math.cos(t)*Math.sin(c)-Math.sin(t)*Math.cos(c)*Math.cos(M),E=Math.atan2(w,L),I=6371e3,P=u,S=Math.asin(Math.sin(t)*Math.cos(P/I)+Math.cos(t)*Math.sin(P/I)*Math.cos(E)),D=n+Math.atan2(Math.sin(E)*Math.sin(P/I)*Math.cos(t),Math.cos(P/I)-Math.sin(t)*Math.sin(S));return{latitude:S*180/Math.PI,longitude:D*180/Math.PI}}function B(e,r,a,i){const t=Math.PI/180,n=(a-e)*t,c=(i-r)*t,f=Math.sin(n/2)**2+Math.cos(e*t)*Math.cos(a*t)*Math.sin(c/2)**2;return 6371e3*(2*Math.atan2(Math.sqrt(f),Math.sqrt(1-f)))}function b(e){alert(e)}};
